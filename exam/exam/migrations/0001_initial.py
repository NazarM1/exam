# Generated by Django 5.2.7 on 2025-10-29 20:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('system_management', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='السعة')),
                ('is_outside', models.BooleanField(default=False, verbose_name='مكان خارجي')),
                ('is_active', models.BooleanField(default=True, verbose_name='تمكين العمل على مكان الامتحان')),
            ],
            options={
                'verbose_name': 'مكان الامتحان',
                'verbose_name_plural': 'أماكن الامتحان',
            },
        ),
        migrations.CreateModel(
            name='ExamSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('exam_type', models.PositiveSmallIntegerField(choices=[(1, 'اختبار منتصف الفصل'), (2, 'الاختبار النهائي'), (3, 'اختبار قصير'), (4, 'امتحان عملي')], verbose_name='نوع الامتحان')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('exam_date', models.DateField(verbose_name='تاريخ الامتحان')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'مجدول'), (2, 'قائم'), (3, 'مكتمل'), (4, 'ملغى'), (5, 'مؤجل')], default=1, verbose_name='حالة الامتحان')),
                ('max_students', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='الحد الأقصى للطلاب')),
                ('is_rescheduled', models.BooleanField(default=False, verbose_name='معاد جدولته')),
                ('fk_grade_distribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_schedules', to='system_management.gradedistribution', verbose_name='توزيع الدرجات')),
                ('fk_semester_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_schedules', to='system_management.semestersubject', verbose_name='مادة الفصل')),
                ('original_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exam.examschedule', verbose_name='الجدول الأصلي')),
            ],
            options={
                'verbose_name': 'جدول الامتحان',
                'verbose_name_plural': 'جداول الامتحانات',
                'ordering': ['exam_date'],
            },
        ),
        migrations.CreateModel(
            name='ExamVenueAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('capacity_allocated', models.IntegerField(help_text='Number of seats allocated from this venue for this exam', verbose_name='السعة المخصصة')),
                ('student_count', models.IntegerField(default=0, help_text='Number of students actually assigned to this venue', verbose_name='عدد الطلاب')),
                ('fk_exam_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue_assignments', to='exam.examschedule', verbose_name='جدول الامتحان')),
                ('fk_exam_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='exam.examvenue', verbose_name='مكان الامتحان')),
            ],
            options={
                'verbose_name': 'تخصيص قاعة للاختبار',
                'verbose_name_plural': 'تخصيصات قاعات الامتحان',
            },
        ),
        migrations.AddField(
            model_name='examschedule',
            name='venues',
            field=models.ManyToManyField(related_name='exam_schedules', through='exam.ExamVenueAssignment', to='exam.examvenue', verbose_name='أماكن الامتحان'),
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('floor', models.CharField(blank=True, max_length=30, null=True, verbose_name='الطابق')),
                ('name', models.CharField(max_length=100, verbose_name='الاسم')),
                ('code', models.CharField(max_length=20, verbose_name='الرمز')),
                ('venue_type', models.PositiveSmallIntegerField(choices=[(1, 'قاعة دراسية'), (2, 'قاعة امتحانات'), (3, 'مختبر'), (4, 'مدرج')], verbose_name='نوع المكان')),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='السعة')),
                ('has_projector', models.BooleanField(default=False, verbose_name='جهاز عرض')),
                ('has_air_conditioning', models.BooleanField(default=False, verbose_name='تكييف')),
                ('is_available', models.BooleanField(default=True, verbose_name='تمكين العمل على القاعة')),
                ('fk_building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='halls', to='system_management.building', verbose_name='المبنى')),
            ],
            options={
                'verbose_name': 'قاعة',
                'verbose_name_plural': 'القاعات',
            },
        ),
        migrations.AddField(
            model_name='examvenue',
            name='fk_hall',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exam_venues', to='exam.hall', verbose_name='قاعة داخلية'),
        ),
        migrations.CreateModel(
            name='Invigilator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('employee_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='رقم الموظف')),
                ('phone_number', models.CharField(max_length=15, verbose_name='رقم الهاتف')),
                ('max_duties_per_day', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='أقصى واجبات يومية')),
                ('max_duties_per_week', models.IntegerField(default=6, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='أقصى واجبات أسبوعية')),
                ('can_supervise_labs', models.BooleanField(default=False, verbose_name='إشراف مختبرات')),
                ('can_handle_special_needs', models.BooleanField(default=False, verbose_name='التعامل مع احتياجات خاصة')),
                ('notes', models.TextField(blank=True, verbose_name='ملاحظات')),
                ('fk_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='system_management.organization', verbose_name='الفرع')),
                ('fk_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invigilator_profile', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مراقب',
                'verbose_name_plural': 'المراقبون',
            },
        ),
        migrations.CreateModel(
            name='OutExamVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, verbose_name='الاسم')),
                ('code', models.CharField(max_length=20, verbose_name='الرمز')),
                ('venue_type', models.PositiveSmallIntegerField(choices=[(1, 'قاعة دراسية'), (2, 'قاعة امتحانات'), (3, 'مختبر'), (4, 'مدرج')], verbose_name='نوع المكان')),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='السعة')),
                ('building', models.CharField(max_length=100, verbose_name='المبنى')),
                ('floor', models.IntegerField(default=1, verbose_name='الطابق')),
                ('has_projector', models.BooleanField(default=False, verbose_name='جهاز عرض')),
                ('has_air_conditioning', models.BooleanField(default=False, verbose_name='تكييف')),
                ('is_available', models.BooleanField(default=True, verbose_name='متاح')),
                ('fk_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='system_management.organization', verbose_name='الفرع')),
            ],
            options={
                'verbose_name': 'مكان اختبارات خارجي',
                'verbose_name_plural': 'أماكن اختبارات خارجية',
            },
        ),
        migrations.AddField(
            model_name='examvenue',
            name='fk_out_exam_venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exam_venues_out', to='exam.outexamvenue', verbose_name='مكان خارجي'),
        ),
        migrations.CreateModel(
            name='Period4Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('order_no', models.PositiveSmallIntegerField(verbose_name='رقم الترتيب')),
                ('start_time', models.TimeField(verbose_name='بداية الفترة')),
                ('end_time', models.TimeField(verbose_name='نهاية الفترة')),
                ('duration_minutes', models.IntegerField(help_text='المدة بالدقائق')),
                ('fk_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='system_management.organization', verbose_name='الفرع')),
            ],
            options={
                'verbose_name': 'فترة الامتحان',
                'verbose_name_plural': 'فترات الامتحان',
            },
        ),
        migrations.CreateModel(
            name='InvigilationDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('duty_role', models.PositiveSmallIntegerField(choices=[(1, 'المشرف الرئيسي'), (2, 'نائب المشرف الرئيسي'), (3, 'مراقب أول'), (4, 'مراقب مساعد'), (5, 'مشرف الطابق'), (6, 'مراقب احتياطي')], default=4, verbose_name='دور المهمة')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'مكلف'), (2, 'مؤكد'), (3, 'مرفوض'), (4, 'مكتمل'), (5, 'ملغى'), (6, 'مستبدل')], default=1, verbose_name='حالة المهمة')),
                ('responsibilities', models.TextField(blank=True, help_text='مهام ومسؤوليات محددة', verbose_name='المسؤوليات')),
                ('requires_special_training', models.BooleanField(default=False, verbose_name='يتطلب تدريب خاص')),
                ('reporting_time', models.TimeField(help_text='وقت الحضور', verbose_name='وقت الحضور')),
                ('assigned_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإسناد')),
                ('attendance_marked', models.BooleanField(default=False, verbose_name='تم تسجيل الحضور')),
                ('attendance_time', models.DateTimeField(blank=True, null=True, verbose_name='وقت الحضور')),
                ('performance_notes', models.TextField(blank=True, verbose_name='ملاحظات الأداء')),
                ('fk_exam_venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invigilation_duties', to='exam.examvenue', verbose_name='مكان الامتحان')),
                ('fk_invigilator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='duties', to='exam.invigilator', verbose_name='المراقب')),
                ('fk_preiod', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='duties', to='exam.period4exam', verbose_name='الفترة')),
            ],
            options={
                'verbose_name': 'مهمة مراقبة',
                'verbose_name_plural': 'مهام المراقبة',
            },
        ),
        migrations.AddField(
            model_name='examschedule',
            name='fk_preiod',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_schedules', to='exam.period4exam', verbose_name='الفترة'),
        ),
        migrations.CreateModel(
            name='UnavailableDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('date', models.DateField(verbose_name='التاريخ')),
                ('reason', models.CharField(choices=[('SICK_LEAVE', 'إجازة مرضية'), ('VACATION', 'إجازة'), ('CONFERENCE', 'مؤتمر'), ('PERSONAL', 'شخصي'), ('OTHER', 'أخرى')], max_length=20, verbose_name='السبب')),
                ('is_approved', models.BooleanField(default=True, verbose_name='موافق عليه')),
                ('fk_invigilator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unavailability', to='exam.invigilator', verbose_name='المراقب')),
            ],
            options={
                'verbose_name': 'تواريخ عدم التوفر',
                'verbose_name_plural': 'تواريخ عدم توفر المراقبين',
            },
        ),
        migrations.CreateModel(
            name='ExamConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('conflict_type', models.PositiveSmallIntegerField(choices=[(1, 'تداخل قاعات'), (2, 'تداخل مراقب'), (3, 'تداخل طالب'), (4, 'تعارض مورد')], verbose_name='نوع التعارض')),
                ('detected_at', models.DateTimeField(auto_now_add=True, verbose_name='وقت الاكتشاف')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='وقت الحل')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'مكتشف'), (2, 'مُحل'), (3, 'متجاهل')], default=1, verbose_name='حالة التعارض')),
                ('resolution_notes', models.TextField(blank=True, verbose_name='ملاحظات الحل')),
                ('fk_exam_schedule_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_as_first', to='exam.examschedule', verbose_name='الجدول الأول')),
                ('fk_exam_schedule_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_as_second', to='exam.examschedule', verbose_name='الجدول الثاني')),
            ],
            options={
                'verbose_name': 'تعارض امتحان',
                'verbose_name_plural': 'تعارضات الامتحانات',
                'indexes': [models.Index(fields=['conflict_type'], name='exam_examco_conflic_369244_idx'), models.Index(fields=['status'], name='exam_examco_status_3b90bb_idx'), models.Index(fields=['fk_exam_schedule_1'], name='exam_examco_fk_exam_665851_idx'), models.Index(fields=['fk_exam_schedule_2'], name='exam_examco_fk_exam_471d7c_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('conflict_type', 'fk_exam_schedule_1', 'fk_exam_schedule_2'), name='unique_conflict_between_schedules_no_deleted')],
            },
        ),
        migrations.CreateModel(
            name='ExamRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ التسجيل')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'مسجل'), (2, 'مؤكد'), (3, 'ملغى'), (4, 'غائب'), (5, 'ناجح'), (6, 'راسب')], default=1, verbose_name='حالة التسجيل')),
                ('seating_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='رقم الجلوس')),
                ('pin', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='الرقم السري')),
                ('grade', models.CharField(blank=True, max_length=2, verbose_name='الدرجة')),
                ('remarks', models.TextField(blank=True, verbose_name='ملاحظات')),
                ('fk_exam_form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_registrations', to='system_management.testform', verbose_name='نموذج الامتحان')),
                ('fk_grades_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exam_registrations', to='system_management.gradesrecord', verbose_name='سجل الدرجات')),
                ('fk_student_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_registrations', to='system_management.studentsubject', verbose_name='الطالب')),
                ('fk_exam_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='exam.examschedule', verbose_name='جدول الامتحان')),
                ('fk_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_registrations', to='exam.examvenue', verbose_name='مكان الامتحان')),
            ],
            options={
                'verbose_name': 'تسجيل امتحان',
                'verbose_name_plural': 'تسجيلات الامتحانات',
                'indexes': [models.Index(fields=['fk_student_subject', 'status'], name='exam_examre_fk_stud_2406c5_idx'), models.Index(fields=['fk_exam_schedule', 'status'], name='exam_examre_fk_exam_71296a_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('fk_student_subject', 'fk_exam_schedule'), name='unique_student_exam_no_deleted')],
            },
        ),
        migrations.AddIndex(
            model_name='examvenueassignment',
            index=models.Index(fields=['fk_exam_schedule'], name='exam_examve_fk_exam_eb6e4d_idx'),
        ),
        migrations.AddIndex(
            model_name='examvenueassignment',
            index=models.Index(fields=['fk_exam_venue'], name='exam_examve_fk_exam_0ff385_idx'),
        ),
        migrations.AddConstraint(
            model_name='examvenueassignment',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('fk_exam_schedule', 'fk_exam_venue'), name='unique_fk_exam_schedule_fk_exam_hall_no_deleted'),
        ),
        migrations.AddIndex(
            model_name='hall',
            index=models.Index(fields=['code'], name='exam_hall_code_d87ff9_idx'),
        ),
        migrations.AddIndex(
            model_name='hall',
            index=models.Index(fields=['fk_building'], name='exam_hall_fk_buil_5e7836_idx'),
        ),
        migrations.AddConstraint(
            model_name='hall',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('code', 'fk_building'), name='unique_code_fk_building_no_deleted'),
        ),
        migrations.AddIndex(
            model_name='invigilator',
            index=models.Index(fields=['employee_id'], name='exam_invigi_employe_bf0b89_idx'),
        ),
        migrations.AddIndex(
            model_name='invigilator',
            index=models.Index(fields=['fk_user'], name='exam_invigi_fk_user_d1db45_idx'),
        ),
        migrations.AddConstraint(
            model_name='invigilator',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('fk_user', 'fk_branch'), name='unique_user_branch_no_deleted'),
        ),
        migrations.AddConstraint(
            model_name='invigilator',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('employee_id', 'fk_branch'), name='unique_employee_id_branch_no_deleted'),
        ),
        migrations.AddIndex(
            model_name='outexamvenue',
            index=models.Index(fields=['code'], name='exam_outexa_code_691283_idx'),
        ),
        migrations.AddIndex(
            model_name='outexamvenue',
            index=models.Index(fields=['building', 'fk_branch'], name='exam_outexa_buildin_305ae2_idx'),
        ),
        migrations.AddConstraint(
            model_name='outexamvenue',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('code', 'building', 'fk_branch'), name='unique_code_building_no_deleted'),
        ),
        migrations.AddIndex(
            model_name='examvenue',
            index=models.Index(fields=['fk_hall'], name='exam_examve_fk_hall_649439_idx'),
        ),
        migrations.AddIndex(
            model_name='examvenue',
            index=models.Index(fields=['fk_out_exam_venue'], name='exam_examve_fk_out__fe687a_idx'),
        ),
        migrations.AddIndex(
            model_name='examvenue',
            index=models.Index(fields=['is_outside', 'is_active'], name='exam_examve_is_outs_ec4e33_idx'),
        ),
        migrations.AddConstraint(
            model_name='examvenue',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('fk_hall', 'is_outside'), name='unique_fk_hall_is_outside_no_deleted'),
        ),
        migrations.AddConstraint(
            model_name='examvenue',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('fk_out_exam_venue', 'is_outside'), name='unique_fk_out_exam_venue_is_outside_no_deleted'),
        ),
        migrations.AddIndex(
            model_name='period4exam',
            index=models.Index(fields=['order_no', 'fk_branch'], name='exam_period_order_n_9ba815_idx'),
        ),
        migrations.AddConstraint(
            model_name='period4exam',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('order_no', 'fk_branch'), name='unique_order_no_fk_branch_no_deleted'),
        ),
        migrations.AddIndex(
            model_name='invigilationduty',
            index=models.Index(fields=['fk_invigilator', 'status'], name='exam_invigi_fk_invi_0a6cbc_idx'),
        ),
        migrations.AddIndex(
            model_name='invigilationduty',
            index=models.Index(fields=['fk_exam_venue', 'status'], name='exam_invigi_fk_exam_89b9c6_idx'),
        ),
        migrations.AddIndex(
            model_name='invigilationduty',
            index=models.Index(fields=['fk_preiod'], name='exam_invigi_fk_prei_24d9af_idx'),
        ),
        migrations.AddConstraint(
            model_name='invigilationduty',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('fk_invigilator', 'fk_exam_venue', 'fk_preiod'), name='unique_fk_invigilator_fk_exam_venue_fk_preiod_no_deleted'),
        ),
        migrations.AddIndex(
            model_name='examschedule',
            index=models.Index(fields=['exam_date', 'fk_preiod'], name='exam_examsc_exam_da_90c1b5_idx'),
        ),
        migrations.AddIndex(
            model_name='examschedule',
            index=models.Index(fields=['fk_semester_subject'], name='exam_examsc_fk_seme_747a23_idx'),
        ),
        migrations.AddIndex(
            model_name='examschedule',
            index=models.Index(fields=['exam_type', 'status'], name='exam_examsc_exam_ty_f3b8e4_idx'),
        ),
        migrations.AddConstraint(
            model_name='unavailabledate',
            constraint=models.UniqueConstraint(fields=('fk_invigilator', 'date'), name='unique_invigilator_date_no_deleted'),
        ),
    ]
